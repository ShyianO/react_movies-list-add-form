{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isValidatedImgUrl","isValidatedImdbUrl","handleChange","event","target","name","value","setState","handleBlur","test","handleSubmit","newMovie","onAdd","props","preventDefault","this","onSubmit","method","htmlFor","type","id","onChange","required","onBlur","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebc801e8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValidatedImgUrl: false,\n    isValidatedImdbUrl: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'imgUrl') {\n      // eslint-disable-next-line max-len\n      if (!/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(value)) {\n        this.setState({ isValidatedImgUrl: true });\n\n        return;\n      }\n\n      this.setState({ isValidatedImgUrl: false });\n    }\n\n    if (name === 'imdbUrl') {\n      // eslint-disable-next-line max-len\n      if (!/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(value)) {\n        this.setState({ isValidatedImdbUrl: true });\n\n        return;\n      }\n\n      this.setState({ isValidatedImdbUrl: false });\n    }\n\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (event) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isValidatedImgUrl,\n      isValidatedImdbUrl,\n    } = this.state;\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n    const { onAdd } = this.props;\n\n    event.preventDefault();\n\n    if (!isValidatedImdbUrl && !isValidatedImgUrl) {\n      onAdd(newMovie);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        isValidatedImgUrl: false,\n        isValidatedImdbUrl: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isValidatedImgUrl,\n      isValidatedImdbUrl,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n        method=\"POST\"\n      >\n        <div className=\"form__container\">\n          <label htmlFor=\"title\">\n            Input title\n          </label>\n\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <div className=\"form__container\">\n          <label htmlFor=\"description\">\n            Input description\n          </label>\n\n          <input\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"form__container\">\n          <label htmlFor=\"imgUrl\">\n            Input imgUrl\n          </label>\n\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            id=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            required\n          />\n        </div>\n\n        {isValidatedImgUrl && (\n          <div className=\"form__alert\">Not correct value</div>\n        )}\n\n        <div className=\"form__container\">\n          <label htmlFor=\"imdbUrl\">\n            Input imdbUrl\n          </label>\n\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            id=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            required\n          />\n        </div>\n\n        {isValidatedImdbUrl && (\n          <div className=\"form__alert\">Not correct value</div>\n        )}\n\n        <div className=\"form__container\">\n          <label htmlFor=\"imdbId\">\n            Input imdbId\n          </label>\n\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            id=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <div>\n          <button type=\"submit\">\n            Add movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [movie, ...prevState.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}